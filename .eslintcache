[{"C:\\Users\\emily.jimmerson\\Desktop\\Work\\Repos\\app-dev-react-poc\\src\\reportWebVitals.js":"1","C:\\Users\\emily.jimmerson\\Desktop\\Work\\Repos\\app-dev-react-poc\\src\\App.js":"2","C:\\Users\\emily.jimmerson\\Desktop\\Work\\Repos\\app-dev-react-poc\\src\\index.js":"3","C:\\Users\\emily.jimmerson\\Desktop\\Work\\Repos\\app-dev-react-poc\\src\\components\\Home.js":"4","C:\\Users\\emily.jimmerson\\Desktop\\Work\\Repos\\app-dev-react-poc\\src\\components\\Edit.js":"5","C:\\Users\\emily.jimmerson\\Desktop\\Work\\Repos\\app-dev-react-poc\\src\\components\\api\\AxiosService.js":"6","C:\\Users\\emily.jimmerson\\Desktop\\Work\\Repos\\app-dev-react-poc\\src\\components\\Item.js":"7","C:\\Users\\emily.jimmerson\\Desktop\\Work\\Repos\\app-dev-react-poc\\src\\components\\api\\Axios.js":"8","C:\\Users\\emily.jimmerson\\Desktop\\Work\\Repos\\app-dev-react-poc\\src\\components\\api\\AxiosPerformance.js":"9"},{"size":362,"mtime":1608150048932,"results":"10","hashOfConfig":"11"},{"size":2526,"mtime":1612979424950,"results":"12","hashOfConfig":"11"},{"size":544,"mtime":1612805959330,"results":"13","hashOfConfig":"11"},{"size":1552,"mtime":1613429132354,"results":"14","hashOfConfig":"11"},{"size":8753,"mtime":1613434112613,"results":"15","hashOfConfig":"11"},{"size":1169,"mtime":1613000699481,"results":"16","hashOfConfig":"11"},{"size":4765,"mtime":1613433564748,"results":"17","hashOfConfig":"11"},{"size":198,"mtime":1612973088641,"results":"18","hashOfConfig":"11"},{"size":156,"mtime":1612973022884,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"i72t0s",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\emily.jimmerson\\Desktop\\Work\\Repos\\app-dev-react-poc\\src\\reportWebVitals.js",[],"C:\\Users\\emily.jimmerson\\Desktop\\Work\\Repos\\app-dev-react-poc\\src\\App.js",[],"C:\\Users\\emily.jimmerson\\Desktop\\Work\\Repos\\app-dev-react-poc\\src\\index.js",[],["41","42"],"C:\\Users\\emily.jimmerson\\Desktop\\Work\\Repos\\app-dev-react-poc\\src\\components\\Home.js",[],"C:\\Users\\emily.jimmerson\\Desktop\\Work\\Repos\\app-dev-react-poc\\src\\components\\Edit.js",["43"],"import React, { useState, useEffect } from 'react';\nimport { Link, useLocation } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { RadioGroup, FormControlLabel, Radio, FormLabel, Grid, ButtonBase, TextField, Select, MenuItem, IconButton, InputLabel, FormControl, Card, CardHeader, Avatar, CardContent, Tooltip, CardActions } from '@material-ui/core';\nimport AxiosService from './api/AxiosService';\nimport SaveIcon from '@material-ui/icons/Save';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\n\nexport default function Edit() {\n\n    let location = useLocation();\n\n    const [name, setName] = useState('');\n    const [legendTitle, setLegendTitle] = useState('');\n    const [imageStatus, setImageStatus] = useState('');\n    const [type, setType] = useState([]);\n    const [selectedType, setSelectedType] = useState('');\n    const [application, setApplication] = useState([]);\n    const [selectedApplication, setSelectedApplication] = useState('');\n\n    useEffect(() => {\n        setName(location.state.name);\n        setLegendTitle(location.state.legendTitle);\n        setImageStatus(location.state.imageStatus);\n        retrieveType();\n        retrieveApplication();\n    }, []);\n\n    const retrieveType = () => {\n        AxiosService.getType()\n            .then(response => {\n                setType(response.data);\n                setSelectedType(location.state.type);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    const retrieveApplication = () => {\n        AxiosService.getApplication()\n            .then(response => {\n                setApplication(response.data);\n                setSelectedApplication(location.state.application);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    const handleNameChange = (event) => {\n        setName(event.target.value);\n    };\n\n    const handleLegendTitleChange = (event) => {\n        setLegendTitle(event.target.value);\n    };\n\n    const handleImageStatusChange = (event) => {\n        setImageStatus(event.target.value);\n    };\n\n    const handleTypeChange = (event) => {\n        setSelectedType(event.target.value);\n    };\n\n    const handleApplicationChange = (event) => {\n        setSelectedApplication(event.target.value);\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Card className={classes.root}>\n                <CardHeader title={name} subheader={location.state.fileName}\n                    avatar={\n                        <Avatar className={imageStatus === 'Active' ? classes.avatar : ''}>\n                            <Tooltip title={imageStatus} placement=\"top\">\n                                <FavoriteIcon />\n                            </Tooltip>\n                        </Avatar>}\n                />\n                <CardContent className={classes.cardContent}>\n                    <Grid container>\n                        <Grid item>\n                            <ButtonBase className={classes.image}>\n                                <img className={classes.img} alt=\"complex\" src={location.state.image} />\n                            </ButtonBase>\n                        </Grid>\n                        <Grid item>\n                            <input id=\"uploadImageFile\" className={classes.input} accept=\"image/*\" type=\"file\" />\n                            <label htmlFor=\"uploadImageFile\">\n                                <Tooltip title=\"Upload Image\" placement=\"top\">\n                                    <IconButton component=\"span\">\n                                        <PhotoCamera />\n                                    </IconButton>\n                                </Tooltip>\n                            </label>\n                        </Grid>\n                        <Grid item>\n                            <FormControl className={classes.formControl}>\n                                <TextField className={classes.textField} label=\"Name\" variant=\"outlined\"\n                                    value={name || ''} onChange={handleNameChange} error={name === '' ? true : false} helperText={name === '' ? 'Required' : ''} />\n                            </FormControl>\n                        </Grid>\n                        <Grid item>\n                            <FormControl className={classes.formControl} variant=\"outlined\">\n                                <InputLabel id=\"type-label\">Type</InputLabel>\n                                <Select id=\"type-select\" labelId=\"type-label\" className={classes.select} label=\"Type\"\n                                    value={selectedType || ''} defaultValue={location.state.type || ''} onChange={handleTypeChange}>\n                                    {type.map((item) => (\n                                        <MenuItem key={item.id} value={item.name || ''}>\n                                            {item.name}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item>\n                            <FormControl className={classes.formControl} variant=\"outlined\">\n                                <InputLabel id=\"application-label\">Application</InputLabel>\n                                <Select id=\"application-select\" labelId=\"application-label\" className={classes.select} label=\"Application\"\n                                    value={selectedApplication || ''} defaultValue={location.state.application || ''} onChange={handleApplicationChange}>\n                                    {application.map((item) => (\n                                        <MenuItem key={item.id} value={item.name || ''}>\n                                            {item.name}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item>\n                            <FormControl className={classes.formControl}>\n                                <TextField className={classes.multilineTextField} label=\"Legend Title\" variant=\"outlined\"\n                                    defaultValue={legendTitle || ''} multiline error={legendTitle === '' ? true : false}\n                                    helperText={legendTitle === '' ? 'Required' : ''}\n                                    onChange={handleLegendTitleChange} />\n                            </FormControl>\n                        </Grid>\n                        <Grid item>\n                            <FormControl className={classes.formControl} component=\"fieldset\">\n                                <FormLabel component=\"legend\">Image Status</FormLabel>\n                                <RadioGroup name=\"imageStatus\" value={imageStatus} onChange={handleImageStatusChange}>\n                                    <FormControlLabel value=\"Active\" control={<Radio />} label=\"Active\" />\n                                    <FormControlLabel value=\"Inactive\" control={<Radio />} label=\"Inactive\" />\n                                </RadioGroup>\n                            </FormControl>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n                <CardActions disableSpacing>\n                    <Tooltip title=\"Save\" placement=\"top\">\n                        <IconButton component={Link} to=\"/\">\n                            <SaveIcon />\n                        </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Cancel\" placement=\"top\">\n                        <IconButton component={Link} to=\"/\">\n                            <ClearIcon />\n                        </IconButton>\n                    </Tooltip>\n                </CardActions>\n            </Card>\n        </div>\n    )\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        margin: theme.spacing(2)\n    },\n    image: {\n        width: 228,\n        height: 228\n    },\n    img: {\n        margin: 'auto',\n        display: 'block',\n        maxWidth: '100%',\n        maxHeight: '100%'\n    },\n    formControl: {\n        margin: theme.spacing(1)\n    },\n    select: {\n        minWidth: 223\n    },\n    multilineTextField: {\n        minWidth: 223\n    },\n    textField: {\n        minWidth: 100\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    avatar: {\n        backgroundColor: 'green'\n    },\n    input: {\n        display: 'none'\n    }\n}));\n","C:\\Users\\emily.jimmerson\\Desktop\\Work\\Repos\\app-dev-react-poc\\src\\components\\api\\AxiosService.js",["44"],"import Axios from './Axios';\r\nimport AxiosPerformance from \"./AxiosPerformance\";\r\n\r\n//Regular API\r\nconst get15 = () => {\r\n    return Axios.get(\"/products\");\r\n}\r\n\r\nconst getType = () => {\r\n    return Axios.get(\"/type\");\r\n}\r\n\r\nconst getApplication = () => {\r\n    return Axios.get(\"/application\");\r\n}\r\n\r\n//Performance Testing API\r\nconst get2000 = () => {\r\n    return AxiosPerformance.get(\"/105eeeab\");\r\n};\r\n\r\nconst get5000 = () => {\r\n    return AxiosPerformance.get(\"/43f59ddd\");\r\n};\r\n\r\nconst get10000 = () => {\r\n    return AxiosPerformance.get(\"/f8e1698d\");\r\n};\r\n\r\nconst get = id => {\r\n    return AxiosPerformance.get(`/105eeeab/${id}`);\r\n};\r\n\r\nconst create = data => {\r\n    return AxiosPerformance.post(\"/105eeeab\", data);\r\n};\r\n\r\nconst update = (id, data) => {\r\n    return AxiosPerformance.put(`/105eeeab/${id}`, data);\r\n};\r\n\r\nconst remove = id => {\r\n    return AxiosPerformance.delete(`/105eeeab/${id}`);\r\n};\r\n\r\nconst removeAll = () => {\r\n    return AxiosPerformance.delete(`/105eeeab`);\r\n};\r\n\r\nexport default {\r\n    get15,\r\n    getType,\r\n    getApplication,\r\n    get2000,\r\n    get5000,\r\n    get10000,\r\n    get,\r\n    create,\r\n    update,\r\n    remove,\r\n    removeAll\r\n};","C:\\Users\\emily.jimmerson\\Desktop\\Work\\Repos\\app-dev-react-poc\\src\\components\\Item.js",[],"C:\\Users\\emily.jimmerson\\Desktop\\Work\\Repos\\app-dev-react-poc\\src\\components\\api\\Axios.js",[],"C:\\Users\\emily.jimmerson\\Desktop\\Work\\Repos\\app-dev-react-poc\\src\\components\\api\\AxiosPerformance.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":29,"column":8,"nodeType":"51","endLine":29,"endColumn":10,"suggestions":"52"},{"ruleId":"53","severity":1,"message":"54","line":50,"column":1,"nodeType":"55","endLine":62,"endColumn":3},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'location.state.imageStatus', 'location.state.legendTitle', 'location.state.name', 'retrieveApplication', and 'retrieveType'. Either include them or remove the dependency array.","ArrayExpression",["58"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},"Update the dependencies array to be: [location.state.imageStatus, location.state.legendTitle, location.state.name, retrieveApplication, retrieveType]",{"range":"61","text":"62"},[1328,1330],"[location.state.imageStatus, location.state.legendTitle, location.state.name, retrieveApplication, retrieveType]"]