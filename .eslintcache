[{"C:\\Users\\emily.jimmerson\\Desktop\\Work\\Repos\\app-dev-react-poc\\src\\reportWebVitals.js":"1","C:\\Users\\emily.jimmerson\\Desktop\\Work\\Repos\\app-dev-react-poc\\src\\App.js":"2","C:\\Users\\emily.jimmerson\\Desktop\\Work\\Repos\\app-dev-react-poc\\src\\index.js":"3","C:\\Users\\emily.jimmerson\\Desktop\\Work\\Repos\\app-dev-react-poc\\src\\components\\Home.js":"4","C:\\Users\\emily.jimmerson\\Desktop\\Work\\Repos\\app-dev-react-poc\\src\\components\\Edit.js":"5","C:\\Users\\emily.jimmerson\\Desktop\\Work\\Repos\\app-dev-react-poc\\src\\components\\api\\AxiosService.js":"6","C:\\Users\\emily.jimmerson\\Desktop\\Work\\Repos\\app-dev-react-poc\\src\\components\\Item.js":"7","C:\\Users\\emily.jimmerson\\Desktop\\Work\\Repos\\app-dev-react-poc\\src\\components\\api\\Axios.js":"8"},{"size":362,"mtime":1608150048932,"results":"9","hashOfConfig":"10"},{"size":2526,"mtime":1612979424950,"results":"11","hashOfConfig":"10"},{"size":544,"mtime":1612805959330,"results":"12","hashOfConfig":"10"},{"size":1388,"mtime":1612979682553,"results":"13","hashOfConfig":"10"},{"size":6711,"mtime":1613002507757,"results":"14","hashOfConfig":"10"},{"size":1169,"mtime":1613000699481,"results":"15","hashOfConfig":"10"},{"size":2946,"mtime":1612984971548,"results":"16","hashOfConfig":"10"},{"size":198,"mtime":1612973088641,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"i72t0s",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\emily.jimmerson\\Desktop\\Work\\Repos\\app-dev-react-poc\\src\\reportWebVitals.js",[],"C:\\Users\\emily.jimmerson\\Desktop\\Work\\Repos\\app-dev-react-poc\\src\\App.js",[],"C:\\Users\\emily.jimmerson\\Desktop\\Work\\Repos\\app-dev-react-poc\\src\\index.js",[],["36","37"],"C:\\Users\\emily.jimmerson\\Desktop\\Work\\Repos\\app-dev-react-poc\\src\\components\\Home.js",[],"C:\\Users\\emily.jimmerson\\Desktop\\Work\\Repos\\app-dev-react-poc\\src\\components\\Edit.js",["38"],"import React, { useState, useEffect } from 'react';\nimport { Link, useLocation } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, ButtonBase, TextField, Select, MenuItem, IconButton, InputLabel, FormControl, Card, CardHeader, Avatar, CardContent, Typography, Tooltip, CardMedia, CardActions } from '@material-ui/core';\nimport AxiosService from './api/AxiosService';\nimport SaveIcon from '@material-ui/icons/Save';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\nexport default function Edit() {\n\n    let location = useLocation();\n\n    const [type, setType] = useState([]);\n    const [selectedType, setSelectedType] = useState('');\n\n    useEffect(() => {\n        retrieveType();\n    }, []);\n\n    const retrieveType = () => {\n        AxiosService.getType()\n            .then(response => {\n                setType(response.data);\n                setSelectedType(location.state.type);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    const [application, setapplication] = useState('3');\n\n    const handleTypeChange = (event) => {\n        setSelectedType(event.target.value);\n    };\n\n    const handleApplicationChange = (event) => {\n        setapplication(event.target.value);\n    };\n\n\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Card className={classes.card}>\n                <CardHeader title={location.state.name} subheader={location.state.fileName}\n                    avatar={\n                        <Avatar className={location.state.imageStatus === 'Active' ? classes.avatar : ''}>\n                            <Tooltip title={location.state.imageStatus} placement=\"top\">\n                                <FavoriteIcon />\n                            </Tooltip>\n                        </Avatar>}\n                />\n                <CardMedia className={classes.media} image={location.state.image} title=\"Image\" />\n                <CardContent className={classes.cardContent}>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {location.state.type} / {location.state.application}\n                    </Typography>\n                    <Grid container>\n                        <Grid item>\n                            <FormControl className={classes.formControl}>\n                                <TextField className={classes.textField} label=\"Name\" variant=\"outlined\" defaultValue={location.state.name || ''} />\n                            </FormControl>\n                        </Grid>\n                        <Grid item>\n                            <FormControl className={classes.formControl} variant=\"outlined\">\n                                <InputLabel id=\"type-label\">Type</InputLabel>\n                                <Select id=\"type-select\" labelId=\"type-label\" className={classes.select} label=\"Type\"\n                                    value={selectedType || ''} onChange={handleTypeChange}>\n                                    {type.map((item) => (\n                                        <MenuItem key={item.id} value={item.name || ''}>\n                                            {item.name}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item>\n                            <FormControl className={classes.formControl} variant=\"outlined\">\n                                <InputLabel id=\"application-label\">Application</InputLabel>\n                                <Select id=\"application-select\" labelId=\"application-label\" className={classes.select} value={application || ''} onChange={handleApplicationChange} label=\"Application\">\n                                    <MenuItem value={1}>Detection</MenuItem>\n                                    <MenuItem value={2}>Herding</MenuItem>\n                                    <MenuItem value={3}>Service</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item>\n                            <FormControl className={classes.formControl}>\n                                <TextField className={classes.multilineTextField} label=\"Legend Title\" variant=\"outlined\" defaultValue={location.state.legendTitle || ''} multiline />\n                            </FormControl>\n                        </Grid>\n                        <Grid item>\n                            <FormControl className={classes.formControl}>\n                                <TextField className={classes.textField} label=\"File Name\" variant=\"outlined\" defaultValue={location.state.fileName || ''} disabled />\n                            </FormControl>\n                        </Grid>\n                        <Grid item>\n                            <FormControl className={classes.formControl}>\n                                <TextField className={classes.textField} label=\"Image Status\" variant=\"outlined\" defaultValue={location.state.imageStatus || ''} />\n                            </FormControl>\n                        </Grid>\n                        <Grid item>\n                            <ButtonBase className={classes.image}>\n                                <img className={classes.img} alt=\"complex\" src={location.state.image} />\n                            </ButtonBase>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n                <CardActions disableSpacing>\n                    <IconButton component={Link} to=\"/\">\n                        <SaveIcon />\n                    </IconButton>\n                    <IconButton component={Link} to=\"/\">\n                        <ClearIcon />\n                    </IconButton>\n                </CardActions>\n            </Card>\n        </div>\n    )\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        margin: theme.spacing(2)\n    },\n    image: {\n        width: 128,\n        height: 128\n    },\n    img: {\n        margin: 'auto',\n        display: 'block',\n        maxWidth: '100%',\n        maxHeight: '100%'\n    },\n    formControl: {\n        margin: theme.spacing(1)\n    },\n    select: {\n        minWidth: 223\n    },\n    multilineTextField: {\n        minWidth: 223\n    },\n    textField: {\n        minWidth: 200\n    },\n    card: {\n        maxWidth: 400,\n        margin: 'auto'\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    avatar: {\n        backgroundColor: 'green'\n    }\n}));\n","C:\\Users\\emily.jimmerson\\Desktop\\Work\\Repos\\app-dev-react-poc\\src\\components\\api\\AxiosService.js",["39"],"C:\\Users\\emily.jimmerson\\Desktop\\Work\\Repos\\app-dev-react-poc\\src\\components\\Item.js",[],"C:\\Users\\emily.jimmerson\\Desktop\\Work\\Repos\\app-dev-react-poc\\src\\components\\api\\Axios.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":19,"column":8,"nodeType":"46","endLine":19,"endColumn":10,"suggestions":"47"},{"ruleId":"48","severity":1,"message":"49","line":50,"column":1,"nodeType":"50","endLine":62,"endColumn":3},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'retrieveType'. Either include it or remove the dependency array.","ArrayExpression",["53"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [retrieveType]",{"range":"56","text":"57"},[790,792],"[retrieveType]"]